
LizaLogick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001fc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000270  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a0  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000048c  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000044e  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000010a  00000000  00000000  00000bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000017a  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a2 36       	cpi	r26, 0x62	; 98
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	68 d0       	rcall	.+208    	; 0x114 <main>
  44:	d9 c0       	rjmp	.+434    	; 0x1f8 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <Clean>:
  48:	82 b3       	in	r24, 0x12	; 18
  4a:	82 bb       	out	0x12, r24	; 18
  4c:	82 b3       	in	r24, 0x12	; 18
  4e:	82 bb       	out	0x12, r24	; 18
  50:	82 b3       	in	r24, 0x12	; 18
  52:	82 bb       	out	0x12, r24	; 18
  54:	08 95       	ret

00000056 <say_attiny2313>:
  56:	81 30       	cpi	r24, 0x01	; 1
  58:	91 05       	cpc	r25, r1
  5a:	19 f0       	breq	.+6      	; 0x62 <say_attiny2313+0xc>
  5c:	02 97       	sbiw	r24, 0x02	; 2
  5e:	21 f0       	breq	.+8      	; 0x68 <say_attiny2313+0x12>
  60:	08 95       	ret
  62:	f2 df       	rcall	.-28     	; 0x48 <Clean>
  64:	97 9a       	sbi	0x12, 7	; 18
  66:	08 95       	ret
  68:	ef df       	rcall	.-34     	; 0x48 <Clean>
  6a:	96 9a       	sbi	0x12, 6	; 18
  6c:	08 95       	ret

0000006e <LogicElementAND>:
  6e:	88 23       	and	r24, r24
  70:	11 f0       	breq	.+4      	; 0x76 <LogicElementAND+0x8>
  72:	86 2f       	mov	r24, r22
  74:	02 c0       	rjmp	.+4      	; 0x7a <LogicElementAND+0xc>
  76:	80 e0       	ldi	r24, 0x00	; 0
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	81 70       	andi	r24, 0x01	; 1
  7c:	08 95       	ret

0000007e <LogicElementOR>:
  7e:	81 11       	cpse	r24, r1
  80:	02 c0       	rjmp	.+4      	; 0x86 <LogicElementOR+0x8>
  82:	86 2f       	mov	r24, r22
  84:	02 c0       	rjmp	.+4      	; 0x8a <LogicElementOR+0xc>
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	81 70       	andi	r24, 0x01	; 1
  8c:	08 95       	ret

0000008e <LogicElementNAND>:
  8e:	88 23       	and	r24, r24
  90:	21 f0       	breq	.+8      	; 0x9a <LogicElementNAND+0xc>
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	68 27       	eor	r22, r24
  96:	86 2f       	mov	r24, r22
  98:	02 c0       	rjmp	.+4      	; 0x9e <LogicElementNAND+0x10>
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	81 70       	andi	r24, 0x01	; 1
  a0:	08 95       	ret

000000a2 <LogicElementNOR>:
  a2:	81 11       	cpse	r24, r1
  a4:	04 c0       	rjmp	.+8      	; 0xae <LogicElementNOR+0xc>
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	68 27       	eor	r22, r24
  aa:	86 2f       	mov	r24, r22
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <LogicElementNOR+0x10>
  ae:	80 e0       	ldi	r24, 0x00	; 0
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	81 70       	andi	r24, 0x01	; 1
  b4:	08 95       	ret

000000b6 <LogicElementXOR>:
  b6:	81 11       	cpse	r24, r1
  b8:	02 c0       	rjmp	.+4      	; 0xbe <LogicElementXOR+0x8>
  ba:	86 2f       	mov	r24, r22
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <LogicElementXOR+0xc>
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	86 27       	eor	r24, r22
  c2:	81 70       	andi	r24, 0x01	; 1
  c4:	08 95       	ret

000000c6 <LogicElementXNOR>:
  c6:	81 11       	cpse	r24, r1
  c8:	03 c0       	rjmp	.+6      	; 0xd0 <LogicElementXNOR+0xa>
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	86 27       	eor	r24, r22
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <LogicElementXNOR+0xc>
  d0:	86 2f       	mov	r24, r22
  d2:	81 70       	andi	r24, 0x01	; 1
  d4:	08 95       	ret

000000d6 <InicializationButton>:
  d6:	84 99       	sbic	0x10, 4	; 16
  d8:	1a c0       	rjmp	.+52     	; 0x10e <InicializationButton+0x38>
  da:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  de:	81 11       	cpse	r24, r1
  e0:	16 c0       	rjmp	.+44     	; 0x10e <InicializationButton+0x38>
  e2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
  e6:	8f 5f       	subi	r24, 0xFF	; 255
  e8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <mode>
  ec:	91 e0       	ldi	r25, 0x01	; 1
  ee:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__DATA_REGION_ORIGIN__>
  f2:	87 30       	cpi	r24, 0x07	; 7
  f4:	10 f0       	brcs	.+4      	; 0xfa <InicializationButton+0x24>
  f6:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <mode>
  fa:	2f e9       	ldi	r18, 0x9F	; 159
  fc:	86 e8       	ldi	r24, 0x86	; 134
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <InicializationButton+0x2a>
 108:	00 c0       	rjmp	.+0      	; 0x10a <InicializationButton+0x34>
 10a:	00 00       	nop
 10c:	08 95       	ret
 10e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 112:	08 95       	ret

00000114 <main>:
 114:	15 ba       	out	0x15, r1	; 21
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	84 bb       	out	0x14, r24	; 20
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	17 ba       	out	0x17, r1	; 23
 11e:	8f e1       	ldi	r24, 0x1F	; 31
 120:	82 bb       	out	0x12, r24	; 18
 122:	80 ee       	ldi	r24, 0xE0	; 224
 124:	81 bb       	out	0x11, r24	; 17
 126:	c1 e0       	ldi	r28, 0x01	; 1
 128:	d6 df       	rcall	.-84     	; 0xd6 <InicializationButton>
 12a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
 12e:	83 30       	cpi	r24, 0x03	; 3
 130:	c1 f1       	breq	.+112    	; 0x1a2 <main+0x8e>
 132:	a8 f4       	brcc	.+42     	; 0x15e <main+0x4a>
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	41 f1       	breq	.+80     	; 0x188 <main+0x74>
 138:	82 30       	cpi	r24, 0x02	; 2
 13a:	09 f0       	breq	.+2      	; 0x13e <main+0x2a>
 13c:	5a c0       	rjmp	.+180    	; 0x1f2 <main+0xde>
 13e:	60 b3       	in	r22, 0x10	; 16
 140:	80 b3       	in	r24, 0x10	; 16
 142:	63 fb       	bst	r22, 3
 144:	66 27       	eor	r22, r22
 146:	60 f9       	bld	r22, 0
 148:	6c 27       	eor	r22, r28
 14a:	82 fb       	bst	r24, 2
 14c:	88 27       	eor	r24, r24
 14e:	80 f9       	bld	r24, 0
 150:	8c 27       	eor	r24, r28
 152:	95 df       	rcall	.-214    	; 0x7e <LogicElementOR>
 154:	88 0f       	add	r24, r24
 156:	85 bb       	out	0x15, r24	; 21
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	20 c0       	rjmp	.+64     	; 0x19e <main+0x8a>
 15e:	85 30       	cpi	r24, 0x05	; 5
 160:	d1 f1       	breq	.+116    	; 0x1d6 <main+0xc2>
 162:	50 f1       	brcs	.+84     	; 0x1b8 <main+0xa4>
 164:	86 30       	cpi	r24, 0x06	; 6
 166:	09 f0       	breq	.+2      	; 0x16a <main+0x56>
 168:	44 c0       	rjmp	.+136    	; 0x1f2 <main+0xde>
 16a:	66 b3       	in	r22, 0x16	; 22
 16c:	86 b3       	in	r24, 0x16	; 22
 16e:	60 95       	com	r22
 170:	66 1f       	adc	r22, r22
 172:	66 27       	eor	r22, r22
 174:	66 1f       	adc	r22, r22
 176:	86 fb       	bst	r24, 6
 178:	88 27       	eor	r24, r24
 17a:	80 f9       	bld	r24, 0
 17c:	8c 27       	eor	r24, r28
 17e:	a3 df       	rcall	.-186    	; 0xc6 <LogicElementXNOR>
 180:	82 95       	swap	r24
 182:	88 0f       	add	r24, r24
 184:	80 7e       	andi	r24, 0xE0	; 224
 186:	33 c0       	rjmp	.+102    	; 0x1ee <main+0xda>
 188:	60 b3       	in	r22, 0x10	; 16
 18a:	90 b3       	in	r25, 0x10	; 16
 18c:	66 95       	lsr	r22
 18e:	68 27       	eor	r22, r24
 190:	61 70       	andi	r22, 0x01	; 1
 192:	89 27       	eor	r24, r25
 194:	81 70       	andi	r24, 0x01	; 1
 196:	6b df       	rcall	.-298    	; 0x6e <LogicElementAND>
 198:	85 bb       	out	0x15, r24	; 21
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	5b df       	rcall	.-330    	; 0x56 <say_attiny2313>
 1a0:	29 c0       	rjmp	.+82     	; 0x1f4 <main+0xe0>
 1a2:	66 b3       	in	r22, 0x16	; 22
 1a4:	86 b3       	in	r24, 0x16	; 22
 1a6:	66 95       	lsr	r22
 1a8:	61 70       	andi	r22, 0x01	; 1
 1aa:	6c 27       	eor	r22, r28
 1ac:	81 70       	andi	r24, 0x01	; 1
 1ae:	8c 27       	eor	r24, r28
 1b0:	6e df       	rcall	.-292    	; 0x8e <LogicElementNAND>
 1b2:	88 0f       	add	r24, r24
 1b4:	88 0f       	add	r24, r24
 1b6:	1b c0       	rjmp	.+54     	; 0x1ee <main+0xda>
 1b8:	66 b3       	in	r22, 0x16	; 22
 1ba:	86 b3       	in	r24, 0x16	; 22
 1bc:	63 fb       	bst	r22, 3
 1be:	66 27       	eor	r22, r22
 1c0:	60 f9       	bld	r22, 0
 1c2:	6c 27       	eor	r22, r28
 1c4:	82 fb       	bst	r24, 2
 1c6:	88 27       	eor	r24, r24
 1c8:	80 f9       	bld	r24, 0
 1ca:	8c 27       	eor	r24, r28
 1cc:	6a df       	rcall	.-300    	; 0xa2 <LogicElementNOR>
 1ce:	88 0f       	add	r24, r24
 1d0:	88 0f       	add	r24, r24
 1d2:	88 0f       	add	r24, r24
 1d4:	0c c0       	rjmp	.+24     	; 0x1ee <main+0xda>
 1d6:	66 b3       	in	r22, 0x16	; 22
 1d8:	86 b3       	in	r24, 0x16	; 22
 1da:	65 fb       	bst	r22, 5
 1dc:	66 27       	eor	r22, r22
 1de:	60 f9       	bld	r22, 0
 1e0:	6c 27       	eor	r22, r28
 1e2:	82 95       	swap	r24
 1e4:	81 70       	andi	r24, 0x01	; 1
 1e6:	8c 27       	eor	r24, r28
 1e8:	66 df       	rcall	.-308    	; 0xb6 <LogicElementXOR>
 1ea:	82 95       	swap	r24
 1ec:	80 7f       	andi	r24, 0xF0	; 240
 1ee:	85 bb       	out	0x15, r24	; 21
 1f0:	01 c0       	rjmp	.+2      	; 0x1f4 <main+0xe0>
 1f2:	15 ba       	out	0x15, r1	; 21
 1f4:	70 df       	rcall	.-288    	; 0xd6 <InicializationButton>
 1f6:	98 cf       	rjmp	.-208    	; 0x128 <main+0x14>

000001f8 <_exit>:
 1f8:	f8 94       	cli

000001fa <__stop_program>:
 1fa:	ff cf       	rjmp	.-2      	; 0x1fa <__stop_program>

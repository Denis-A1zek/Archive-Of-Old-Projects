
Sigida.StandForTriggers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  000002a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000857  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000053f  00000000  00000000  00000b97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000492  00000000  00000000  000010d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00001568  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000337  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000219  00000000  00000000  000018e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	1f c0       	rjmp	.+62     	; 0x42 <__bad_interrupt>
   4:	1e c0       	rjmp	.+60     	; 0x42 <__bad_interrupt>
   6:	1d c0       	rjmp	.+58     	; 0x42 <__bad_interrupt>
   8:	1c c0       	rjmp	.+56     	; 0x42 <__bad_interrupt>
   a:	1b c0       	rjmp	.+54     	; 0x42 <__bad_interrupt>
   c:	1a c0       	rjmp	.+52     	; 0x42 <__bad_interrupt>
   e:	19 c0       	rjmp	.+50     	; 0x42 <__bad_interrupt>
  10:	18 c0       	rjmp	.+48     	; 0x42 <__bad_interrupt>
  12:	17 c0       	rjmp	.+46     	; 0x42 <__bad_interrupt>
  14:	16 c0       	rjmp	.+44     	; 0x42 <__bad_interrupt>
  16:	15 c0       	rjmp	.+42     	; 0x42 <__bad_interrupt>
  18:	14 c0       	rjmp	.+40     	; 0x42 <__bad_interrupt>
  1a:	13 c0       	rjmp	.+38     	; 0x42 <__bad_interrupt>
  1c:	12 c0       	rjmp	.+36     	; 0x42 <__bad_interrupt>
  1e:	11 c0       	rjmp	.+34     	; 0x42 <__bad_interrupt>
  20:	10 c0       	rjmp	.+32     	; 0x42 <__bad_interrupt>
  22:	0f c0       	rjmp	.+30     	; 0x42 <__bad_interrupt>
  24:	0e c0       	rjmp	.+28     	; 0x42 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_clear_bss>:
  2e:	20 e0       	ldi	r18, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	01 c0       	rjmp	.+2      	; 0x38 <.do_clear_bss_start>

00000036 <.do_clear_bss_loop>:
  36:	1d 92       	st	X+, r1

00000038 <.do_clear_bss_start>:
  38:	a3 36       	cpi	r26, 0x63	; 99
  3a:	b2 07       	cpc	r27, r18
  3c:	e1 f7       	brne	.-8      	; 0x36 <.do_clear_bss_loop>
  3e:	2a d0       	rcall	.+84     	; 0x94 <main>
  40:	f3 c0       	rjmp	.+486    	; 0x228 <_exit>

00000042 <__bad_interrupt>:
  42:	de cf       	rjmp	.-68     	; 0x0 <__vectors>

00000044 <InicializationButton>:
	InicializationButton();
}

void InicializationButton()
{
	if(RESET_BUTTON && flagButton == 0)
  44:	82 99       	sbic	0x10, 2	; 16
  46:	1a c0       	rjmp	.+52     	; 0x7c <InicializationButton+0x38>
  48:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  4c:	81 11       	cpse	r24, r1
  4e:	16 c0       	rjmp	.+44     	; 0x7c <InicializationButton+0x38>
	{
		mode++;
  50:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
  54:	8f 5f       	subi	r24, 0xFF	; 255
  56:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <mode>
		flagButton = 1;
  5a:	91 e0       	ldi	r25, 0x01	; 1
  5c:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__DATA_REGION_ORIGIN__>
		
		if(mode > 4)
  60:	85 30       	cpi	r24, 0x05	; 5
  62:	10 f0       	brcs	.+4      	; 0x68 <InicializationButton+0x24>
		mode = 0;
  64:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <mode>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  68:	2f e9       	ldi	r18, 0x9F	; 159
  6a:	86 e8       	ldi	r24, 0x86	; 134
  6c:	91 e0       	ldi	r25, 0x01	; 1
  6e:	21 50       	subi	r18, 0x01	; 1
  70:	80 40       	sbci	r24, 0x00	; 0
  72:	90 40       	sbci	r25, 0x00	; 0
  74:	e1 f7       	brne	.-8      	; 0x6e <InicializationButton+0x2a>
  76:	00 c0       	rjmp	.+0      	; 0x78 <InicializationButton+0x34>
  78:	00 00       	nop
  7a:	08 95       	ret
		
		_delay_ms(500);
	}else
	flagButton = 0;
  7c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  80:	08 95       	ret

00000082 <Output>:
  82:	e7 ea       	ldi	r30, 0xA7	; 167
  84:	f1 e6       	ldi	r31, 0x61	; 97
  86:	31 97       	sbiw	r30, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <Output+0x4>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <Output+0xa>
  8c:	00 00       	nop


void Output(char value)
{
	_delay_ms(100);
	PORTB = value;
  8e:	88 bb       	out	0x18, r24	; 24
	InicializationButton();
  90:	d9 df       	rcall	.-78     	; 0x44 <InicializationButton>
  92:	08 95       	ret

00000094 <main>:
}


int main(void)
{
	PORTD=0xFF;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	82 bb       	out	0x12, r24	; 18
	DDRD=0x00;
  98:	11 ba       	out	0x11, r1	; 17
	PORTB=0x00;
  9a:	18 ba       	out	0x18, r1	; 24
	DDRB=0xFF;
  9c:	87 bb       	out	0x17, r24	; 23
	
	while (1)
	{
		InicializationButton();
  9e:	d2 df       	rcall	.-92     	; 0x44 <InicializationButton>
		switch (mode)
  a0:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
  a4:	82 30       	cpi	r24, 0x02	; 2
  a6:	d9 f1       	breq	.+118    	; 0x11e <__stack+0x3f>
  a8:	18 f4       	brcc	.+6      	; 0xb0 <main+0x1c>
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	41 f0       	breq	.+16     	; 0xbe <main+0x2a>
  ae:	ba c0       	rjmp	.+372    	; 0x224 <__stack+0x145>
  b0:	83 30       	cpi	r24, 0x03	; 3
  b2:	09 f4       	brne	.+2      	; 0xb6 <main+0x22>
  b4:	89 c0       	rjmp	.+274    	; 0x1c8 <__stack+0xe9>
  b6:	84 30       	cpi	r24, 0x04	; 4
  b8:	09 f4       	brne	.+2      	; 0xbc <main+0x28>
  ba:	a5 c0       	rjmp	.+330    	; 0x206 <__stack+0x127>
  bc:	b3 c0       	rjmp	.+358    	; 0x224 <__stack+0x145>
		{
			case 1:
			Output(0b00000100);
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	e0 df       	rcall	.-64     	; 0x82 <Output>
			buffer = 0b00000100;
  c2:	84 e0       	ldi	r24, 0x04	; 4
  c4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
			while(mode == 1)
  c8:	25 c0       	rjmp	.+74     	; 0x114 <__stack+0x35>
			{
				if(R_BUTTON && S_BUTTON)
  ca:	80 99       	sbic	0x10, 0	; 16
  cc:	05 c0       	rjmp	.+10     	; 0xd8 <main+0x44>
  ce:	81 99       	sbic	0x10, 1	; 16
  d0:	03 c0       	rjmp	.+6      	; 0xd8 <main+0x44>
				{
					Output(0b00000111);
  d2:	87 e0       	ldi	r24, 0x07	; 7
  d4:	d6 df       	rcall	.-84     	; 0x82 <Output>
  d6:	1e c0       	rjmp	.+60     	; 0x114 <__stack+0x35>
				}
				else if(!R_BUTTON && !S_BUTTON)
  d8:	80 9b       	sbis	0x10, 0	; 16
  da:	06 c0       	rjmp	.+12     	; 0xe8 <__stack+0x9>
  dc:	81 9b       	sbis	0x10, 1	; 16
  de:	04 c0       	rjmp	.+8      	; 0xe8 <__stack+0x9>
				{
					Output(buffer);
  e0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <buffer>
  e4:	ce df       	rcall	.-100    	; 0x82 <Output>
					buffer = buffer;
  e6:	16 c0       	rjmp	.+44     	; 0x114 <__stack+0x35>
					
				}
				else if(!R_BUTTON && S_BUTTON)
  e8:	80 9b       	sbis	0x10, 0	; 16
  ea:	08 c0       	rjmp	.+16     	; 0xfc <__stack+0x1d>
  ec:	81 99       	sbic	0x10, 1	; 16
  ee:	06 c0       	rjmp	.+12     	; 0xfc <__stack+0x1d>
				{
					Output(0b00000101);
  f0:	85 e0       	ldi	r24, 0x05	; 5
  f2:	c7 df       	rcall	.-114    	; 0x82 <Output>
					buffer = 0b00000101;
  f4:	85 e0       	ldi	r24, 0x05	; 5
  f6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
  fa:	0c c0       	rjmp	.+24     	; 0x114 <__stack+0x35>
					
				}
				else if(R_BUTTON && !S_BUTTON)
  fc:	80 99       	sbic	0x10, 0	; 16
  fe:	08 c0       	rjmp	.+16     	; 0x110 <__stack+0x31>
 100:	81 9b       	sbis	0x10, 1	; 16
 102:	06 c0       	rjmp	.+12     	; 0x110 <__stack+0x31>
				{
					Output(0b00000110);
 104:	86 e0       	ldi	r24, 0x06	; 6
 106:	bd df       	rcall	.-134    	; 0x82 <Output>
					buffer = 0b00000110;
 108:	86 e0       	ldi	r24, 0x06	; 6
 10a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__stack+0x35>
				}else Output(0b00000100);
 110:	84 e0       	ldi	r24, 0x04	; 4
 112:	b7 df       	rcall	.-146    	; 0x82 <Output>
		switch (mode)
		{
			case 1:
			Output(0b00000100);
			buffer = 0b00000100;
			while(mode == 1)
 114:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
 118:	81 30       	cpi	r24, 0x01	; 1
 11a:	b9 f2       	breq	.-82     	; 0xca <main+0x36>
 11c:	c0 cf       	rjmp	.-128    	; 0x9e <main+0xa>
					buffer = 0b00000110;
				}else Output(0b00000100);
			}
			break;
			case 2:
			Output(0b00001000);
 11e:	88 e0       	ldi	r24, 0x08	; 8
 120:	b0 df       	rcall	.-160    	; 0x82 <Output>
			buffer = 0b00001000;
 122:	88 e0       	ldi	r24, 0x08	; 8
 124:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
			while(mode == 2)
 128:	49 c0       	rjmp	.+146    	; 0x1bc <__stack+0xdd>
			{
				if(R_BUTTON && S_BUTTON)
 12a:	80 99       	sbic	0x10, 0	; 16
 12c:	29 c0       	rjmp	.+82     	; 0x180 <__stack+0xa1>
 12e:	81 99       	sbic	0x10, 1	; 16
 130:	27 c0       	rjmp	.+78     	; 0x180 <__stack+0xa1>
 132:	87 ea       	ldi	r24, 0xA7	; 167
 134:	91 e6       	ldi	r25, 0x61	; 97
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <__stack+0x57>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <__stack+0x5d>
 13c:	00 00       	nop
				{
					_delay_ms(100);
					PORTB = 0b00001001;
 13e:	89 e0       	ldi	r24, 0x09	; 9
 140:	88 bb       	out	0x18, r24	; 24
 142:	e7 ea       	ldi	r30, 0xA7	; 167
 144:	f1 e6       	ldi	r31, 0x61	; 97
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <__stack+0x67>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <__stack+0x6d>
 14c:	00 00       	nop
					_delay_ms(100);
					PORTB = 0b00001000;
 14e:	88 e0       	ldi	r24, 0x08	; 8
 150:	88 bb       	out	0x18, r24	; 24
 152:	e7 ea       	ldi	r30, 0xA7	; 167
 154:	f1 e6       	ldi	r31, 0x61	; 97
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <__stack+0x77>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <__stack+0x7d>
 15c:	00 00       	nop
					_delay_ms(100);
					PORTB = 0b00001010;
 15e:	9a e0       	ldi	r25, 0x0A	; 10
 160:	98 bb       	out	0x18, r25	; 24
 162:	e7 ea       	ldi	r30, 0xA7	; 167
 164:	f1 e6       	ldi	r31, 0x61	; 97
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <__stack+0x87>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <__stack+0x8d>
 16c:	00 00       	nop
					_delay_ms(100);
					PORTB = 0b00001000;
 16e:	88 bb       	out	0x18, r24	; 24
 170:	87 ea       	ldi	r24, 0xA7	; 167
 172:	91 e6       	ldi	r25, 0x61	; 97
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <__stack+0x95>
 178:	00 c0       	rjmp	.+0      	; 0x17a <__stack+0x9b>
 17a:	00 00       	nop
					_delay_ms(100);
					InicializationButton();
 17c:	63 df       	rcall	.-314    	; 0x44 <InicializationButton>
 17e:	1e c0       	rjmp	.+60     	; 0x1bc <__stack+0xdd>
				}
				else if(!R_BUTTON && !S_BUTTON)
 180:	80 9b       	sbis	0x10, 0	; 16
 182:	06 c0       	rjmp	.+12     	; 0x190 <__stack+0xb1>
 184:	81 9b       	sbis	0x10, 1	; 16
 186:	04 c0       	rjmp	.+8      	; 0x190 <__stack+0xb1>
				{
					Output(buffer);
 188:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <buffer>
 18c:	7a df       	rcall	.-268    	; 0x82 <Output>
					buffer = buffer;
 18e:	16 c0       	rjmp	.+44     	; 0x1bc <__stack+0xdd>
				}
				else if(!R_BUTTON && S_BUTTON)
 190:	80 9b       	sbis	0x10, 0	; 16
 192:	08 c0       	rjmp	.+16     	; 0x1a4 <__stack+0xc5>
 194:	81 99       	sbic	0x10, 1	; 16
 196:	06 c0       	rjmp	.+12     	; 0x1a4 <__stack+0xc5>
				{
					Output(0b00001001);
 198:	89 e0       	ldi	r24, 0x09	; 9
 19a:	73 df       	rcall	.-282    	; 0x82 <Output>
					buffer = 0b00001001;
 19c:	89 e0       	ldi	r24, 0x09	; 9
 19e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
 1a2:	0c c0       	rjmp	.+24     	; 0x1bc <__stack+0xdd>
				}
				else if(R_BUTTON && !S_BUTTON)
 1a4:	80 99       	sbic	0x10, 0	; 16
 1a6:	08 c0       	rjmp	.+16     	; 0x1b8 <__stack+0xd9>
 1a8:	81 9b       	sbis	0x10, 1	; 16
 1aa:	06 c0       	rjmp	.+12     	; 0x1b8 <__stack+0xd9>
				{
					Output(0b00001010);
 1ac:	8a e0       	ldi	r24, 0x0A	; 10
 1ae:	69 df       	rcall	.-302    	; 0x82 <Output>
					buffer = 0b00001010;
 1b0:	8a e0       	ldi	r24, 0x0A	; 10
 1b2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <__stack+0xdd>
				}else Output(0b0001000);
 1b8:	88 e0       	ldi	r24, 0x08	; 8
 1ba:	63 df       	rcall	.-314    	; 0x82 <Output>
			}
			break;
			case 2:
			Output(0b00001000);
			buffer = 0b00001000;
			while(mode == 2)
 1bc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	09 f4       	brne	.+2      	; 0x1c6 <__stack+0xe7>
 1c4:	b2 cf       	rjmp	.-156    	; 0x12a <__stack+0x4b>
 1c6:	6b cf       	rjmp	.-298    	; 0x9e <main+0xa>
					buffer = 0b00001010;
				}else Output(0b0001000);
			}
			break;
			case 3:
			Output(0b00010000);
 1c8:	80 e1       	ldi	r24, 0x10	; 16
 1ca:	5b df       	rcall	.-330    	; 0x82 <Output>
			while(mode == 3)
 1cc:	17 c0       	rjmp	.+46     	; 0x1fc <__stack+0x11d>
			{
				if(R_BUTTON && !S_BUTTON)
 1ce:	80 99       	sbic	0x10, 0	; 16
 1d0:	08 c0       	rjmp	.+16     	; 0x1e2 <__stack+0x103>
 1d2:	81 9b       	sbis	0x10, 1	; 16
 1d4:	06 c0       	rjmp	.+12     	; 0x1e2 <__stack+0x103>
				{
					Output(0b000010010);
 1d6:	82 e1       	ldi	r24, 0x12	; 18
 1d8:	54 df       	rcall	.-344    	; 0x82 <Output>
					buffer = 0b000010010;
 1da:	82 e1       	ldi	r24, 0x12	; 18
 1dc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
 1e0:	0d c0       	rjmp	.+26     	; 0x1fc <__stack+0x11d>
				}
				else if(!R_BUTTON && !S_BUTTON)
 1e2:	80 9b       	sbis	0x10, 0	; 16
 1e4:	08 c0       	rjmp	.+16     	; 0x1f6 <__stack+0x117>
 1e6:	81 9b       	sbis	0x10, 1	; 16
 1e8:	06 c0       	rjmp	.+12     	; 0x1f6 <__stack+0x117>
				{
					Output(0b00010001);
 1ea:	81 e1       	ldi	r24, 0x11	; 17
 1ec:	4a df       	rcall	.-364    	; 0x82 <Output>
					buffer = 0b00010001;
 1ee:	81 e1       	ldi	r24, 0x11	; 17
 1f0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <buffer>
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <__stack+0x11d>
				}else Output(buffer);
 1f6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <buffer>
 1fa:	43 df       	rcall	.-378    	; 0x82 <Output>
				}else Output(0b0001000);
			}
			break;
			case 3:
			Output(0b00010000);
			while(mode == 3)
 1fc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
 200:	83 30       	cpi	r24, 0x03	; 3
 202:	29 f3       	breq	.-54     	; 0x1ce <__stack+0xef>
 204:	4c cf       	rjmp	.-360    	; 0x9e <main+0xa>
					buffer = 0b00010001;
				}else Output(buffer);
			}
			break;
			case 4:
			Output(0b00100000);
 206:	80 e2       	ldi	r24, 0x20	; 32
 208:	3c df       	rcall	.-392    	; 0x82 <Output>
			while(mode == 4)
 20a:	07 c0       	rjmp	.+14     	; 0x21a <__stack+0x13b>
			{
				if(!R_BUTTON)
 20c:	80 9b       	sbis	0x10, 0	; 16
 20e:	03 c0       	rjmp	.+6      	; 0x216 <__stack+0x137>
				Output(0b00100001);
 210:	81 e2       	ldi	r24, 0x21	; 33
 212:	37 df       	rcall	.-402    	; 0x82 <Output>
 214:	02 c0       	rjmp	.+4      	; 0x21a <__stack+0x13b>
				else
				Output(0b00100010);
 216:	82 e2       	ldi	r24, 0x22	; 34
 218:	34 df       	rcall	.-408    	; 0x82 <Output>
				}else Output(buffer);
			}
			break;
			case 4:
			Output(0b00100000);
			while(mode == 4)
 21a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <mode>
 21e:	84 30       	cpi	r24, 0x04	; 4
 220:	a9 f3       	breq	.-22     	; 0x20c <__stack+0x12d>
 222:	3d cf       	rjmp	.-390    	; 0x9e <main+0xa>
				else
				Output(0b00100010);
			}
			break;
			default:
			PORTB = 0x00;
 224:	18 ba       	out	0x18, r1	; 24
			break;
 226:	3b cf       	rjmp	.-394    	; 0x9e <main+0xa>

00000228 <_exit>:
 228:	f8 94       	cli

0000022a <__stop_program>:
 22a:	ff cf       	rjmp	.-2      	; 0x22a <__stop_program>
